function [H, row, col] = harris_corner_detection(image)
% Function to perform Harris Corner Detection.
% Returns the cornerness matrix H and the coordinates of the cornerpoints

% params
kernel_size = 3;
sigma = 1;
window_size = 4;

% image operations
img = im2double(image);
img = rgb2gray(img);

% calculate Ix, A, B, C and H
G = fspecial('gaussian', kernel_size, sigma);
[Gx, Gy] = gradient(G);
Ix = conv2(img, Gx, 'same');
Iy = conv2(img, Gy, 'same');

A = conv2(Ix.^2, G, 'same');
B = conv2(Ix.*Iy, G, 'same');
C = conv2(Iy.^2, G, 'same');
H = (A.*C - B.^2) - 0.04*(A+C).^2;

for i = 1 + window_size: size(H,1) - window_size
    for j = 1 + window_size: size(H,2) - window_size
       window = H(i-window_size:i+window_size, j-window_size:j+window_size);
       if H(i,j) == max(window(:)
    end
end

end